on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule:
    - cron: '0 6 * * *'

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macOS-latest,   r: 'release', python: '3.12'}
          - {os: windows-latest, r: 'release', python: '3.12'}
          - {os: ubuntu-latest,  r: 'devel', http-user-agent: 'release', python: '3.12'}
          - {os: ubuntu-latest,  r: 'release', python: '3.12'}
       
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: actions/setup-python@v4
        if: matrix.config.python != 'debug'
        with:
          python-version: ${{ matrix.config.python }}

      - if: matrix.config.python == 'debug'
        name: setup python3-dbg
        run: |
          # sudo apt-get update
          sudo apt-get install -y python3-dbg python3-pip python3-venv
          # sudo rm -f /usr/bin/python3 /usr/bin/python
          sudo ln -sf /usr/bin/python3-dbg /usr/bin/python3
          sudo ln -sf /usr/bin/python3-dbg /usr/bin/python


      - uses: conda-incubator/setup-miniconda@v3
        with:
             auto-activate-base: true
             activate-environment: "r-eikon"
      
      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck local::.
          cache-version: 4
          upgrade: 'TRUE'
          needs: check

      - name: setup r-reticulate venv
        shell: Rscript {0}
        run: |
          library(reticulate)
          path_to_venv <- virtualenv_create(
            envname = "r-eikon",
            python = Sys.which("python"), # placed on PATH by the setup-python action
            packages = c(
              "docutils", "pandas", "scipy", "matplotlib", "ipython",
              "tabulate", "plotly", "psutil", "kaleido", "wrapt"
            )
          )
          writeLines(
            paste0("RETICULATE_PYTHON=", virtualenv_python(path_to_venv)),
            Sys.getenv("GITHUB_ENV"))
            
      - uses: r-lib/actions/check-r-package@v2
        with:
          upload-snapshots: true
          build_args: 'c("--no-manual","--compact-vignettes=gs+qpdf")'
