name: test-coverage

on:
  push:
    branches: [main, master]
  pull_request:
  schedule:
    - cron: '0 6 * * *'

permissions:
  contents: read

jobs:
  test-coverage:
    runs-on: windows-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true
          r-version: '4.3'

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Setup Conda Environment
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-activate-base: false
          activate-environment: "r-eikon"
          python-version: "3.10"
          auto-update-conda: true

      - name: Install Python Packages
        shell: pwsh  # Use PowerShell for Windows compatibility
        run: |
          conda activate r-eikon
          conda install -n r-eikon -c conda-forge docutils pandas scipy matplotlib ipython tabulate plotly psutil numpy
          pip install kaleido wrapt
          conda list -n r-eikon

      - name: Install R Dependencies
        run: |
          Rscript -e "install.packages(c('covr', 'testthat', 'remotes', 'reticulate', 'xml2'), repos = 'https://cran.rstudio.com/')"

      - name: Configure and Verify Reticulate
        shell: pwsh
        run: |
          conda activate r-eikon
          $env:RETICULATE_PYTHON = (conda info --base) + "\envs\r-eikon\python.exe"
          Rscript -e "library(reticulate); use_condaenv('r-eikon', required = TRUE); py_config(); py_module_available('pandas')"
          if ($LASTEXITCODE -ne 0) { throw "Reticulate failed to configure Python environment" }

      - name: Install Package Dependencies and Load Package
        shell: pwsh
        run: |
          conda activate r-eikon
          $env:RETICULATE_PYTHON = (conda info --base) + "\envs\r-eikon\python.exe"
          Rscript -e "remotes::install_deps(dependencies = TRUE, upgrade = 'always'); devtools::load_all()"

      - name: Run Tests and Generate Coverage
        shell: pwsh
        run: |
          conda activate r-eikon
          $env:RETICULATE_PYTHON = (conda info --base) + "\envs\r-eikon\python.exe"
          Rscript -e "library(testthat); library(covr); test_dir('tests/testthat', stop_on_failure = FALSE); cov <- package_coverage(quiet = FALSE, clean = FALSE); print(cov); covr::to_cobertura(cov, file = 'cobertura.xml')"
        continue-on-error: true

      - name: Verify Coverage Output
        shell: pwsh
        run: |
          if (Test-Path "cobertura.xml") {
            Write-Host "Coverage file generated successfully:"
            Get-Content "cobertura.xml"
          } else {
            Write-Error "Error: cobertura.xml not found!"
            exit 1
          }

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./cobertura.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
