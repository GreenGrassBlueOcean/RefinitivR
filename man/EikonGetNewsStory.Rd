% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/EikonGetNewsHeadlines.R, R/EikonNews.R
\name{EikonGetNewsStory}
\alias{EikonGetNewsStory}
\title{Return a single news story corresponding to the identifier provided in story_id}
\usage{
EikonGetNewsStory(
  EikonObject = EikonConnect(),
  story_id = NULL,
  raw_output = FALSE,
  debug = FALSE
)

EikonGetNewsStory(
  EikonObject = EikonConnect(),
  story_id = NULL,
  raw_output = FALSE,
  debug = FALSE
)
}
\arguments{
\item{EikonObject}{Connection Object result from EikonConnect()}

\item{story_id}{The story id. The story id is a field you will find in every headline you retrieved with the legacy get_news_headlines}

\item{raw_output}{boolean if TRUE provide only the raw downloaded info from Eikon}

\item{debug}{boolean if TRUE prints out the python call to the console}
}
\value{
data.frame

data.frame
}
\description{
Return a single news story corresponding to the identifier provided in story_id

Return a single news story corresponding to the identifier provided in story_id
}
\examples{
\dontrun{
 Eikon <- Refinitiv::EikonConnect()
 headlines <- EikonGetNewsHeadlines(EikonObject = Eikon
                                   , query = "R:MSFT.O", count = 2)
 stories <- lapply(headlines$story_id, EikonGetNewsStory
                                     , EikonObject = Eikon)
}

\dontrun{
  EikonJson <- RefinitivJsonConnect()
  headlines <- EikonGetNewsHeadlines(EikonObject = EikonJson
                                    , query = "R:MSFT.O", count = 2)
  stories <- lapply(headlines$story_id, EikonGetNewsStory
                   , EikonObject = EikonJson)
}
\dontrun{
 Eikon <- Refinitiv::EikonConnect()
 headlines <- EikonGetNewsHeadlines(EikonObject = Eikon
                                   , query = "R:MSFT.O", count = 2)
 stories <- lapply(headlines$story_id, EikonGetNewsStory
                                     , EikonObject = Eikon)
}

\dontrun{
  EikonJson <- RefinitivJsonConnect()
  headlines <- EikonGetNewsHeadlines(EikonObject = EikonJson
                                    , query = "R:MSFT.O", count = 2)
  stories <- lapply(headlines$story_id, EikonGetNewsStory
                   , EikonObject = EikonJson)
}
}
