% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/refinitiv.r
\name{EikonGetSymbology}
\alias{EikonGetSymbology}
\title{Returns a list of instrument names converted into another instrument code.
For example: convert SEDOL instrument names to RIC names}
\usage{
EikonGetSymbology(
  EikonObject,
  symbol,
  from_symbol_type = "RIC",
  to_symbol_type = c("CUSIP", "ISIN", "SEDOL", "RIC", "ticker", "lipperID", "IMO",
    "OAPermID"),
  bestMatch = TRUE,
  time_out = 60,
  verbose = FALSE,
  raw_output = FALSE
)
}
\arguments{
\item{EikonObject}{Eikon object created using EikonConnect function}

\item{symbol}{character or list of characters     Single instrument or list of instruments to convert.}

\item{from_symbol_type}{character Instrument code to convert from. Possible values: 'CUSIP', 'ISIN', 'SEDOL', 'RIC', 'ticker', 'lipperID', 'IMO' Default: 'RIC'}

\item{to_symbol_type}{character  string or list     Instrument code to convert to. Possible values: 'CUSIP', 'ISIN', 'SEDOL', 'RIC', 'ticker', 'lipperID', 'IMO', 'OAPermID' Default: None (means all symbol types are requested)}

\item{bestMatch}{boolean     When set to TRUE, only primary symbol is requested. When set to FALSE, all symbols are requested}

\item{time_out}{numeric set the maximum timeout to the Eikon server, default = 60}

\item{verbose}{boolean, set to true to print out the actual python call with time stamp for debugging.}

\item{raw_output}{boolean     Set this parameter to True to get the data in json format if set to FALSE, the function will return a data frame Default: FALSE}
}
\value{
data.frame
}
\description{
original python parameters raw_output and debug cannot be used due to int64 python to R conversion problem.
\url{https://github.com/rstudio/reticulate/issues/729}
}
\examples{
\dontrun{
Eikon <- Refinitiv::EikonConnect()
EikonGetSymbology(EikonObject = Eikon, symbol =  "AAPL.O"
 , to_symbol_type = "ISIN" )
EikonGetSymbology(EikonObject = Eikon
, symbol =  "GB00B03MLX29", from_symbol_type = "ISIN"
,  to_symbol_type = "RIC" , verbose = TRUE)
EikonGetSymbology(EikonObject = Eikon
, symbol =  "GB00B03MLX29", from_symbol_type = "ISIN"
,  to_symbol_type = "RIC" , verbose = TRUE, bestMatch = FALSE)
EikonGetSymbology(EikonObject = Eikon, symbol =  "RDSa.AS"
, to_symbol_type = "ISIN"  , verbose = TRUE)
EikonGetSymbology(EikonObject = Eikon, symbol =  "RDSa.L"
, to_symbol_type = "ISIN"  , verbose = TRUE)
}
}
